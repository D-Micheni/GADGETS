{"ast":null,"code":"var _jsxFileName = \"/home/moringa/phase-2/src/components/SliderShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Slides as slides } from '../Data';\nimport SlideDots from './SlideDots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SliderShow() {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const delay = 5000;\n  const timeoutRef = useRef(null);\n\n  function resetTimeout() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n\n  useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(() => setIndex(prevIndex => prevIndex === slides.length - 1 ? 0 : prevIndex + 1), delay);\n    return () => {\n      resetTimeout();\n    };\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mySlides fade\",\n      style: {\n        transform: `translate3d(${-index * 100}%, 0, 0)`\n      },\n      children: slides.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.url,\n          alt: \"\",\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlideDots, {\n      slides: slides,\n      index: index,\n      setIndex: setIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SliderShow, \"bhtDMAuiTWjY/oCsgWcgDfz/cnA=\");\n\n_c = SliderShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderShow\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Slides","slides","SlideDots","SliderShow","index","setIndex","delay","timeoutRef","resetTimeout","current","clearTimeout","setTimeout","prevIndex","length","transform","map","item","url","width","text"],"sources":["/home/moringa/phase-2/src/components/SliderShow.js"],"sourcesContent":["import React, { useEffect, useRef, useState} from 'react'\nimport { Slides as slides } from '../Data';\nimport SlideDots from './SlideDots';\n\nexport default function SliderShow() {\n    const [index, setIndex] = useState(0);\n    const delay = 5000;\n    const timeoutRef = useRef(null);\n    function resetTimeout() {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n    }\n    useEffect(() => {\n      resetTimeout();\n      timeoutRef.current = setTimeout(\n        () =>\n          setIndex((prevIndex) =>\n            prevIndex === slides.length - 1 ? 0 : prevIndex + 1\n          ),\n        delay\n      );\n      return () => {\n        resetTimeout();\n      };\n    }, [index]);\n\n  return (\n    <div className='slideshow-container'>\n      <div className='mySlides fade' style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}>\n        {slides.map((item, index) => \n          <div key={index} className=\"slider\">\n            <img src={item.url} alt=\"\" style={{width: \"100%\"}}/>\n            <div className='text'>{item.text}</div>\n          </div> \n        )}                   \n      </div>\n      <SlideDots slides={slides} index={index} setIndex={setIndex}/>\n    </div>   \n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,SAASC,MAAM,IAAIC,MAAnB,QAAiC,SAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACjC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAMO,KAAK,GAAG,IAAd;EACA,MAAMC,UAAU,GAAGT,MAAM,CAAC,IAAD,CAAzB;;EACA,SAASU,YAAT,GAAwB;IACpB,IAAID,UAAU,CAACE,OAAf,EAAwB;MACtBC,YAAY,CAACH,UAAU,CAACE,OAAZ,CAAZ;IACD;EACJ;;EACDZ,SAAS,CAAC,MAAM;IACdW,YAAY;IACZD,UAAU,CAACE,OAAX,GAAqBE,UAAU,CAC7B,MACEN,QAAQ,CAAEO,SAAD,IACPA,SAAS,KAAKX,MAAM,CAACY,MAAP,GAAgB,CAA9B,GAAkC,CAAlC,GAAsCD,SAAS,GAAG,CAD5C,CAFmB,EAK7BN,KAL6B,CAA/B;IAOA,OAAO,MAAM;MACXE,YAAY;IACb,CAFD;EAGD,CAZQ,EAYN,CAACJ,KAAD,CAZM,CAAT;EAcF,oBACE;IAAK,SAAS,EAAC,qBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,eAAf;MAA+B,KAAK,EAAE;QAAEU,SAAS,EAAG,eAAc,CAACV,KAAD,GAAS,GAAI;MAAzC,CAAtC;MAAA,UACGH,MAAM,CAACc,GAAP,CAAW,CAACC,IAAD,EAAOZ,KAAP,kBACV;QAAiB,SAAS,EAAC,QAA3B;QAAA,wBACE;UAAK,GAAG,EAAEY,IAAI,CAACC,GAAf;UAAoB,GAAG,EAAC,EAAxB;UAA2B,KAAK,EAAE;YAACC,KAAK,EAAE;UAAR;QAAlC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,MAAf;UAAA,UAAuBF,IAAI,CAACG;QAA5B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA,GAAUf,KAAV;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eASE,QAAC,SAAD;MAAW,MAAM,EAAEH,MAAnB;MAA2B,KAAK,EAAEG,KAAlC;MAAyC,QAAQ,EAAEC;IAAnD;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GApCuBF,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}